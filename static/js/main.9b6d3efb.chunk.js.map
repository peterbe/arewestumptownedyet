{"version":3,"sources":["Stats.js","App.js","index.js"],"names":["Stats","isServer","document","navigator","userAgent","App","className","role","aria-label","href","kuma","toLocaleString","stumptown","toFixed","ts","date","Date","toLocaleDateString","StatsChart","HistoryChart","data","labels","values","roughness","width","stroke","strokeWidth","y","xLabel","yLabel","title","legend","circleRadius","rootElement","getElementById","hasChildNodes","hydrate","render"],"mappings":"qNAIaA,G,kBAAQ,CACnB,KAAQ,cACR,KAAQ,CACN,QAAS,MACT,IAAO,OAET,UAAa,CACX,QAAS,GACT,IAAO,QCHEC,EACS,qBAAbC,UAAoD,cAAxBC,UAAUC,UA4FhCC,MA1Ff,WACE,OACE,6BACE,4BAAQC,UAAU,UAChB,wDAGF,0BAAMA,UAAU,QACd,iCACK,IACH,0BAAMC,KAAK,MAAMC,aAAW,OAA5B,iBAKF,4CACA,gIAEgC,IAC9B,uBAAGC,KAAK,iCAAR,QAHF,gDAI0B,IACxB,oFALF,KAOA,+DACA,4BACE,4BACE,uBAAGA,KAAK,4CACN,gEACG,IAHP,8CAMA,4BACE,uBAAGA,KAAK,6CACN,iEACG,IAHP,+DAOF,yGAES,+DAFT,kDAGyB,oDAHzB,KAMA,8CACA,6BACE,qCACQ,uCADR,MAGA,uBAAGH,UAAU,UAAUN,EAAMU,KAAK,SAASC,kBAE3C,0CACa,uCADb,MAGA,uBAAGL,UAAU,UAAUN,EAAMY,UAAU,SAASD,kBAChD,2CACgB,KAEX,IAAMX,EAAMY,UAAU,UACtBZ,EAAMY,UAAU,SAAWZ,EAAMU,KAAK,WACvCG,QAAQ,GALZ,cASF,2BACE,yCAoBeC,EApBed,EAAMe,KAqBlC,IAAIC,KAAKF,GACVG,wBApBH,6BACE,kBAACC,EAAD,MACA,kBAACC,EAAD,QAGJ,4BAAQb,UAAU,UAChB,6BAASA,UAAU,QACjB,uBAAGA,UAAU,aACX,uBAAGG,KAAK,mDAAR,8CAUZ,IAAyBK,GAOzB,SAASI,IACP,GAAIjB,EACF,OAAO,2DAET,IAAMmB,EAAO,CACXC,OAAQ,CAAC,eAAgB,aACzBC,OAAQ,CAACtB,EAAMU,KAAK,SAAUV,EAAMY,UAAU,WAGhD,OAAO,kBAAC,MAAD,CAAKQ,KAAMA,EAAMG,UAAW,EAAGC,MAAO,IAAKC,OAAO,YAG3D,SAASN,IACP,GAAIlB,EACF,OAAO,2DAKT,OACE,kBAAC,OAAD,CACEmB,KALkC,cAMlCG,UAAW,EACXC,MAAO,IACPE,YAAa,IAEbC,EAAE,QACFC,OAAO,OACPC,OAAO,mBACPJ,OAAO,UACPK,MAAM,8BACNC,QAAQ,EACRC,aAAc,IClIpB,IAAMC,EAAc/B,SAASgC,eAAe,QACxCD,EAAYE,gBACdC,kBAAQ,kBAAC,EAAD,MAASH,GAEjBI,iBAAO,kBAAC,EAAD,MAASJ,I","file":"static/js/main.9b6d3efb.chunk.js","sourcesContent":["/** This page is auto-generated from inject-stats.js\n * Date: Fri Oct 25 2019 09:44:31 GMT-0400 (Eastern Daylight Time)\n */\n\nexport const Stats = {\n  \"date\": 1572011071446,\n  \"kuma\": {\n    \"en-US\": 18256,\n    \"all\": 64262\n  },\n  \"stumptown\": {\n    \"en-US\": 78,\n    \"all\": null\n  }\n};\n","import React from \"react\";\nimport { Bar, Line } from \"react-roughviz\";\n// import \"./light.css\";\nimport \"cutestrap/dist/css/cutestrap.min.css\";\nimport \"./Cutestrap-customizations.css\";\nimport \"./App.css\";\n\nimport { Stats } from \"./Stats\";\n\nexport const isServer =\n  typeof document === \"undefined\" || navigator.userAgent === \"ReactSnap\";\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"header\">\n        <h1>Are We Stumptowned Yet?</h1>\n      </header>\n\n      <main className=\"main\">\n        <h2>\n          No{\" \"}\n          <span role=\"img\" aria-label=\"sad\">\n            ☹️\n          </span>\n        </h2>\n\n        <h3>What's this?</h3>\n        <p>\n          Stumptown is a Mozilla MDN project to rewrite existing documentation\n          about web development, from a{\" \"}\n          <a href=\"https://developer.mozilla.org\">Wiki</a>, stored in a central\n          relational database, to{\" \"}\n          <b>strutured content (e.g. Markdown files) in a Git repo</b>.\n        </p>\n        <p>Stumptown consists of two parts:</p>\n        <ul>\n          <li>\n            <a href=\"https://github.com/mdn/stumptown-content\">\n              <b>github.com/mdn/stumptown-content</b>\n            </a>{\" \"}\n            - the actual content (plus some scripting)\n          </li>\n          <li>\n            <a href=\"https://github.com/mdn/stumptown-renderer\">\n              <b>github.com/mdn/stumptown-renderer</b>\n            </a>{\" \"}\n            - React components for turning content into HTML web pages\n          </li>\n        </ul>\n        <p>\n          This site is about attempting to measure how many ready pages there\n          are in <b>github.com/mdn/stumptown-content</b> and contrast that with\n          the number of pages in <b>developer.mozilla.org</b>.\n        </p>\n\n        <h3>Current Status</h3>\n        <div>\n          <h5>\n            Kuma (<code>en-US</code>):\n          </h5>\n          <p className=\"number\">{Stats.kuma[\"en-US\"].toLocaleString()}</p>\n\n          <h5>\n            Stumptown (<code>en-US</code>):\n          </h5>\n          <p className=\"number\">{Stats.stumptown[\"en-US\"].toLocaleString()}</p>\n          <p>\n            Approximately{\" \"}\n            {(\n              (100 * Stats.stumptown[\"en-US\"]) /\n              (Stats.stumptown[\"en-US\"] + Stats.kuma[\"en-US\"])\n            ).toFixed(1)}\n            % of Kuma\n          </p>\n        </div>\n        <p>\n          <small>As of {prettyTimestamp(Stats.date)}</small>\n        </p>\n        <div>\n          <StatsChart />\n          <HistoryChart />\n        </div>\n      </main>\n      <footer className=\"footer\">\n        <section className=\"grid\">\n          <p className=\"ta-center\">\n            <a href=\"https://github.com/peterbe/arewestumptownedyet/\">\n              github.com/peterbe/arewestumptownedyet\n            </a>\n          </p>\n        </section>\n      </footer>\n    </div>\n  );\n}\n\nfunction prettyTimestamp(ts) {\n  const d = new Date(ts);\n  return d.toLocaleDateString();\n}\n\nexport default App;\n\nfunction StatsChart() {\n  if (isServer) {\n    return <i>No SVG charts in server mode</i>;\n  }\n  const data = {\n    labels: [\"Kuma (en-US)\", \"Stumptown\"],\n    values: [Stats.kuma[\"en-US\"], Stats.stumptown[\"en-US\"]]\n  };\n\n  return <Bar data={data} roughness={2} width={800} stroke=\"#cccccc\" />;\n}\n\nfunction HistoryChart() {\n  if (isServer) {\n    return <i>No SVG charts in server mode</i>;\n  }\n  const data = process.env.PUBLIC_URL + \"history.csv\";\n  // Still a bit broken since it doesn't display the dates on the\n  // x-axis.\n  return (\n    <Line\n      data={data}\n      roughness={3}\n      width={800}\n      strokeWidth={1.5}\n      // x=\"date\"\n      y=\"COUNT\"\n      xLabel=\"Time\"\n      yLabel=\"# Stumptown docs\"\n      stroke=\"#cccccc\"\n      title=\"# Stumptdown docs over time\"\n      legend={false}\n      circleRadius={5}\n    />\n  );\n}\n","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\n// import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}