{"version":3,"sources":["Stats.js","App.js","index.js"],"names":["Stats","App","href","className","kuma","toLocaleString","stumptown","toFixed","ts","date","Date","toLocaleDateString","ReactDOM","render","document","getElementById"],"mappings":"qQAeeA,G,gBAXD,CACZ,KAAQ,cACR,KAAQ,CACN,QAAS,MACT,IAAO,OAET,UAAa,CACX,QAAS,GACT,IAAO,QC4DIC,MAnEf,WACE,OACE,6BACE,uDACA,qCAEA,4CACA,gIAEgC,IAC9B,uBAAGC,KAAK,iCAAR,QAHF,gDAI0B,IACxB,oFALF,KAOA,+DACA,4BACE,4BACE,uBAAGA,KAAK,4CACN,gEACG,IAHP,8CAMA,4BACE,uBAAGA,KAAK,6CACN,iEACG,IAHP,+DAOF,yGAEK,+DAFL,kDAGqB,oDAHrB,KAMA,8CACA,4BACE,qCACQ,uCADR,MAGA,wBAAIC,UAAU,UAAUH,EAAMI,KAAK,SAASC,kBAE5C,0CACa,uCADb,MAGA,wBAAIF,UAAU,UAAUH,EAAMM,UAAU,SAASD,kBACjD,4CACgB,KAEX,IAAML,EAAMM,UAAU,UACtBN,EAAMM,UAAU,SAAWN,EAAMI,KAAK,WACvCG,QAAQ,GALZ,cASF,2BACE,yCAMiBC,EANaR,EAAMS,KAOhC,IAAIC,KAAKF,GACVG,yBAFX,IAAyBH,GC7DzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d7b27bd9.chunk.js","sourcesContent":["/** This page is auto-generated from inject-stats.js\n * Date: Fri Aug 16 2019 10:27:57 GMT-0400 (Eastern Daylight Time)\n */\n\nconst Stats = {\n  \"date\": 1565965677780,\n  \"kuma\": {\n    \"en-US\": 18256,\n    \"all\": 64262\n  },\n  \"stumptown\": {\n    \"en-US\": 50,\n    \"all\": null\n  }\n};\nexport default Stats;\n","import React from \"react\";\nimport \"./light.css\";\nimport \"./App.css\";\nimport Stats from \"./Stats\";\n\nfunction App() {\n  return (\n    <div>\n      <h1>Are We Stumptowned Yet?</h1>\n      <h2>No :(</h2>\n\n      <h3>What's this?</h3>\n      <p>\n        Stumptown is a Mozilla MDN project to rewrite existing documentation\n        about web development, from a{\" \"}\n        <a href=\"https://developer.mozilla.org\">Wiki</a>, stored in a central\n        relational database, to{\" \"}\n        <b>strutured content (e.g. Markdown files) in a Git repo</b>.\n      </p>\n      <p>Stumptown consists of two parts:</p>\n      <ul>\n        <li>\n          <a href=\"https://github.com/mdn/stumptown-content\">\n            <b>github.com/mdn/stumptown-content</b>\n          </a>{\" \"}\n          - the actual content (plus some scripting)\n        </li>\n        <li>\n          <a href=\"https://github.com/mdn/stumptown-renderer\">\n            <b>github.com/mdn/stumptown-renderer</b>\n          </a>{\" \"}\n          - React components for turning content into HTML web pages\n        </li>\n      </ul>\n      <p>\n        This site is about attempting to measure how many ready pages there are\n        in <b>github.com/mdn/stumptown-content</b> and contrast that with the\n        number of pages in <b>developer.mozilla.org</b>.\n      </p>\n\n      <h3>Current Status</h3>\n      <dl>\n        <dt>\n          Kuma (<code>en-US</code>):\n        </dt>\n        <dd className=\"number\">{Stats.kuma[\"en-US\"].toLocaleString()}</dd>\n\n        <dt>\n          Stumptown (<code>en-US</code>):\n        </dt>\n        <dd className=\"number\">{Stats.stumptown[\"en-US\"].toLocaleString()}</dd>\n        <dd>\n          Approximately{\" \"}\n          {(\n            (100 * Stats.stumptown[\"en-US\"]) /\n            (Stats.stumptown[\"en-US\"] + Stats.kuma[\"en-US\"])\n          ).toFixed(1)}\n          % of Kuma\n        </dd>\n      </dl>\n      <p>\n        <small>As of {prettyTimestamp(Stats.date)}</small>\n      </p>\n    </div>\n  );\n}\n\nfunction prettyTimestamp(ts) {\n  const d = new Date(ts);\n  return d.toLocaleDateString();\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}