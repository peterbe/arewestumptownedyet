{"version":3,"sources":["Stats.js","App.js","index.js"],"names":["Stats","App","useEffect","svg","document","querySelector","chartXkcd","Bar","title","yLabel","data","labels","datasets","kuma","stumptown","options","yTickCount","href","className","toLocaleString","toFixed","ts","date","Date","toLocaleDateString","ReactDOM","render","getElementById"],"mappings":"2OAeeA,G,YAXD,CACZ,KAAQ,cACR,KAAQ,CACN,QAAS,MACT,IAAO,OAET,UAAa,CACX,QAAS,GACT,IAAO,QCwFIC,MA7Ff,WAwBE,OAvBAC,oBAAU,WACR,IAAMC,EAAMC,SAASC,cAAc,cAInC,IAAIC,IAAUC,IAAIJ,EAAK,CACrBK,MAAO,oBAEPC,OAAQ,cACRC,KAAM,CACJC,OAAQ,CAAC,eAAgB,aACzBC,SAAU,CACR,CACEF,KAAM,CAACV,EAAMa,KAAK,SAAUb,EAAMc,UAAU,aAIlDC,QAAS,CAEPC,WAAY,OAGf,IAED,6BACE,uDACA,qCAEA,4CACA,gIAEgC,IAC9B,uBAAGC,KAAK,iCAAR,QAHF,gDAI0B,IACxB,oFALF,KAOA,+DACA,4BACE,4BACE,uBAAGA,KAAK,4CACN,gEACG,IAHP,8CAMA,4BACE,uBAAGA,KAAK,6CACN,iEACG,IAHP,+DAOF,yGAEK,+DAFL,kDAGqB,oDAHrB,KAMA,8CACA,4BACE,qCACQ,uCADR,MAGA,wBAAIC,UAAU,UAAUlB,EAAMa,KAAK,SAASM,kBAE5C,0CACa,uCADb,MAGA,wBAAID,UAAU,UAAUlB,EAAMc,UAAU,SAASK,kBACjD,4CACgB,KAEX,IAAMnB,EAAMc,UAAU,UACtBd,EAAMc,UAAU,SAAWd,EAAMa,KAAK,WACvCO,QAAQ,GALZ,cASF,2BACE,yCASiBC,EATarB,EAAMsB,KAUhC,IAAIC,KAAKF,GACVG,wBATL,6BACE,yBAAKN,UAAU,gBAMvB,IAAyBG,GCzFzBI,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASuB,eAAe,U","file":"static/js/main.abc22046.chunk.js","sourcesContent":["/** This page is auto-generated from inject-stats.js\n * Date: Thu Oct 03 2019 12:54:54 GMT-0400 (Eastern Daylight Time)\n */\n\nconst Stats = {\n  \"date\": 1570121694561,\n  \"kuma\": {\n    \"en-US\": 18256,\n    \"all\": 64262\n  },\n  \"stumptown\": {\n    \"en-US\": 53,\n    \"all\": null\n  }\n};\nexport default Stats;\n","import React, { useEffect } from \"react\";\nimport chartXkcd from \"chart.xkcd\";\nimport \"./light.css\";\nimport \"./App.css\";\n\nimport Stats from \"./Stats\";\n\nfunction App() {\n  useEffect(() => {\n    const svg = document.querySelector(\".bar-chart\");\n\n    // You can't control the colors yet. :(\n    // https://github.com/timqian/chart.xkcd/issues/11#issuecomment-526298775\n    new chartXkcd.Bar(svg, {\n      title: \"Kuma vs Stumptown\", // optional\n      // xLabel: '', // optional\n      yLabel: \"# documents\", // optional\n      data: {\n        labels: [\"Kuma (en-US)\", \"Stumptown\"],\n        datasets: [\n          {\n            data: [Stats.kuma[\"en-US\"], Stats.stumptown[\"en-US\"]]\n          }\n        ]\n      },\n      options: {\n        // optional\n        yTickCount: 10\n      }\n    });\n  }, []);\n  return (\n    <div>\n      <h1>Are We Stumptowned Yet?</h1>\n      <h2>No :(</h2>\n\n      <h3>What's this?</h3>\n      <p>\n        Stumptown is a Mozilla MDN project to rewrite existing documentation\n        about web development, from a{\" \"}\n        <a href=\"https://developer.mozilla.org\">Wiki</a>, stored in a central\n        relational database, to{\" \"}\n        <b>strutured content (e.g. Markdown files) in a Git repo</b>.\n      </p>\n      <p>Stumptown consists of two parts:</p>\n      <ul>\n        <li>\n          <a href=\"https://github.com/mdn/stumptown-content\">\n            <b>github.com/mdn/stumptown-content</b>\n          </a>{\" \"}\n          - the actual content (plus some scripting)\n        </li>\n        <li>\n          <a href=\"https://github.com/mdn/stumptown-renderer\">\n            <b>github.com/mdn/stumptown-renderer</b>\n          </a>{\" \"}\n          - React components for turning content into HTML web pages\n        </li>\n      </ul>\n      <p>\n        This site is about attempting to measure how many ready pages there are\n        in <b>github.com/mdn/stumptown-content</b> and contrast that with the\n        number of pages in <b>developer.mozilla.org</b>.\n      </p>\n\n      <h3>Current Status</h3>\n      <dl>\n        <dt>\n          Kuma (<code>en-US</code>):\n        </dt>\n        <dd className=\"number\">{Stats.kuma[\"en-US\"].toLocaleString()}</dd>\n\n        <dt>\n          Stumptown (<code>en-US</code>):\n        </dt>\n        <dd className=\"number\">{Stats.stumptown[\"en-US\"].toLocaleString()}</dd>\n        <dd>\n          Approximately{\" \"}\n          {(\n            (100 * Stats.stumptown[\"en-US\"]) /\n            (Stats.stumptown[\"en-US\"] + Stats.kuma[\"en-US\"])\n          ).toFixed(1)}\n          % of Kuma\n        </dd>\n      </dl>\n      <p>\n        <small>As of {prettyTimestamp(Stats.date)}</small>\n      </p>\n      <div>\n        <svg className=\"bar-chart\"></svg>\n      </div>\n    </div>\n  );\n}\n\nfunction prettyTimestamp(ts) {\n  const d = new Date(ts);\n  return d.toLocaleDateString();\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}